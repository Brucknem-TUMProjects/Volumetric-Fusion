#version 430
layout(local_size_x = 1, local_size_y = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image3D img_output;

void main() {
    // base pixel colour for image
    vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);
    // get index in global work group i.e x,y position
    ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);
  
    ivec3 dims = imageSize(img_output); // fetch image dimensions

    float col_x = (float(pixel_coords.x) / dims.x);
    float col_y = (float(pixel_coords.y) / dims.y);
    float col_z = (float(pixel_coords.z) / dims.z);
    pixel = vec4(col_x, col_y, col_z, 1.0);
    
    // output to a specific pixel in the image
    imageStore(img_output, pixel_coords, pixel);
}